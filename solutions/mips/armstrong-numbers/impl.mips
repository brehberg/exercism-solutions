# | Register | Usage     | Type    | Description                                       |
# | -------- | --------- | ------- | ------------------------------------------------- |
# | `$a0`    | input     | address | number                                            |
# | `$v0`    | output    | boolean | is armstrong number (`0` = `false`, `1` = `true`) |
# | `$t0-9`  | temporary | any     | used for temporary storage                        |

.globl is_armstrong_number

is_armstrong_number:
        beqz    $a0, __done

        # determine the count of digits in the given input number
        move    $t0, $a0
        move    $t9, $zero            # holds the length of given number
__count_digits:
        div     $t0, $t0, 10
        addi    $t9, $t9, 1
        bnez    $t0, __count_digits

        # calculate to sum of digits each raised to the power of digit count
        move 	$t0, $a0
        move    $t8, $zero            # holds sum for comparison with input
__compute_sum:
        rem     $t1, $t0, 10
        div     $t0, $t0, 10
        move    $t3, $t9
        addi    $t4, $zero, 1         # holds running value for current digit
__raise_power:
        mul     $t4, $t4, $t1
        subi	$t3, $t3, 1
        bnez    $t3, __raise_power
        add     $t8, $t8, $t4
        bnez    $t0, __compute_sum

__done:
        seq     $v0, $a0, $t8         # check if sum is equal to given number
        jr      $ra
